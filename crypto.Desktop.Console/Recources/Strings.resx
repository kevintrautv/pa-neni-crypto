<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="ProgressBar_PrintProgressBar_Progress___0___1_" xml:space="preserve">
    <value>Progress: {0}/{1}</value>
  </data>
  <data name="ProgressBar_PrintProgressBar__0__Failed___1_" xml:space="preserve">
    <value>{0} Failed: {1}</value>
  </data>
  <data name="Program_Main_No_console_arguments_given" xml:space="preserve">
    <value>No console arguments given.</value>
  </data>
  <data name="Program_Main_Something_went_wrong__" xml:space="preserve">
    <value>Something went wrong: </value>
  </data>
  <data name="PasswordPrompt_PromptPassword_Enter_Password__" xml:space="preserve">
    <value>Enter Password: </value>
  </data>
  <data name="PasswordPrompt_PromptPasswordWithConfirmation_Confirm_Password__" xml:space="preserve">
    <value>Confirm Password: </value>
  </data>
  <data name="PasswordPrompt_PromptPasswordWithConfirmation_Password_didn_t_match_up" xml:space="preserve">
    <value>Password didn't match up.</value>
  </data>
  <data name="CommandLineArgumentParser_ParseConfig_No_arguments_given" xml:space="preserve">
    <value>No arguments given.</value>
  </data>
  <data name="CommandLineArgumentParser_ParseConfig_Argument_was_not_recognized" xml:space="preserve">
    <value>Argument was not recognized.</value>
  </data>
  <data name="UnlockCommandAsync_Run_File_has_been_altered" xml:space="preserve">
    <value>File: {0} has been altered, be careful with this file.</value>
  </data>
  <data name="UnlockCommandAsync_Run_Vault_unlocked_" xml:space="preserve">
    <value>Vault unlocked.</value>
  </data>
  <data name="UnlockCommandAsync_ExtractAllFiles_Error_unlocking_file__0____1_" xml:space="preserve">
    <value>Error unlocking file {0}: {1}</value>
  </data>
  <data name="RenameCommand_RenameCommand_No_path_to_vault_given" xml:space="preserve">
    <value>No path to vault given.</value>
  </data>
  <data name="RenameCommand_RenameCommand_No_path_to_file_given" xml:space="preserve">
    <value>No path to file given.</value>
  </data>
  <data name="RenameCommand_RenameCommand_No_new_name_given" xml:space="preserve">
    <value>No new name given.</value>
  </data>
  <data name="RenameCommand_Run_The_file_to_rename_wasn_t_found" xml:space="preserve">
    <value>The file to rename wasn't found.</value>
  </data>
  <data name="RenameCommand_Run_File_renamed_to_" xml:space="preserve">
    <value>File renamed to </value>
  </data>
  <data name="NewCommandAsync_Run_The_directory_vault_is_not_empty" xml:space="preserve">
    <value>The directory with the vault name is not empty.</value>
  </data>
  <data name="NewCommandAsync_Run_Created_vault__0__as__1__" xml:space="preserve">
    <value>Created vault {0} as {1}</value>
  </data>
  <data name="MoveCommand_MoveCommand_No_new_path_given" xml:space="preserve">
    <value>No new path given.</value>
  </data>
  <data name="MoveCommand_Run_File_moved_to_" xml:space="preserve">
    <value>File moved to </value>
  </data>
  <data name="LockCommand_Run_Locking_files___" xml:space="preserve">
    <value>Locking files...</value>
  </data>
  <data name="LockCommand_Run_Locked_all_files_in_Vault_" xml:space="preserve">
    <value>Locked all files in Vault.</value>
  </data>
  <data name="LockCommand_LockAllFiles_Updating_file_" xml:space="preserve">
    <value>Updating file </value>
  </data>
  <data name="LockCommand_LockAllFiles_Error_locking_file__0____1_" xml:space="preserve">
    <value>Error locking file {0}: {1}</value>
  </data>
  <data name="DeleteCommand_Run_Deleted_file_" xml:space="preserve">
    <value>Deleted file {0}.</value>
  </data>
  <data name="AddCommandAsync_Run_Added_file__0__to_vault" xml:space="preserve">
    <value>Added file {0} to vault.</value>
  </data>
  <data name="AddCommandAsync_AddDirectory_Error_with_file__0____1_" xml:space="preserve">
    <value>Error with file {0}: {1}</value>
  </data>
  <data name="AddCommandAsync_AddDirectory_Added_directory__0__to_vault" xml:space="preserve">
    <value>Added directory {0} to vault.</value>
  </data>
  <data name="HelpText" xml:space="preserve">
    <value>Neni-Crypto Help
&lt;Not implemented in english&gt;

Neni-Crypto Hilfe
&lt;&gt; - benötigt
() - Optional
Beispiel: crp -pw asdf123 add BeispielVault ../datei.dat

Argument:
 -pw &lt;Kennwort&gt; überspringt die Kennworteingabe mit dem gegebenen Kennwort

Anweisungen:
 new (Name) (Pfad) – erstellt einen neuen Vault mit dem gegebenen Namen.
 add &lt;Pfad zum Vault&gt; &lt;Pfad&gt; - fügt eine oder mehrere Dateien oder Ordner dem Vault hinzu.
 unlock (Pfad zum Vault) - Entschlüsselt alles im Vault.
 lock (Pfad zum Vault) - Löscht jede Datei, welche im Vault entschlüsselt wurde. Dateien, welche verändert wurden, werden aktualisiert.
 mv &lt;Pfad zum Vault&gt; &lt;Kompletter Name einer Datei im Vault&gt; &lt;Neuer Ort&gt; - Verschiebt die Datei an einem anderen Ort.
 rn &lt;Pfad zum Vault&gt; &lt;Kompletter Name einer Datei im Vault&gt; &lt;Neuer Name&gt; - Gibt der Datei einen neuen Namen.
 del &lt;Pfad zum Vault&gt; &lt;Kompletter Name einer Datei im Vault&gt; - Löscht die Datei vom Vault.
 list &lt;Pfad zum Vault&gt; - Listet alle Dateien im Vault, nützlich in Verbindung mit mv, rn und del.</value>
  </data>
</root>